{
    "workbench.colorTheme": "Solarized Dark",
    "workbench.startupEditor": "newUntitledFile",
    "materialTheme.accent": "Acid Lime",
    "explorer.confirmDelete": false,
    "editor.minimap.enabled": false,
    "editor.rulers": [80],
    "autoDocstring.docstringFormat": "google",
    "files.exclude": {
        ".idea": true,
        "**/.ipynb_checkpoints": true,
        "**/.pytest_cache": true,
        "**/__pycache__": true,
        "**/*.pyc": true
    },
    "vim.easymotion": true,
    "vim.sneak": true,
    "vim.incsearch": true,
    "vim.useSystemClipboard": true,
    "vim.useCtrlKeys": true,
    "vim.hlsearch": true,
    "vim.insertModeKeyBindings": [
        {
        "before": ["j", "j"],
        "after": ["<Esc>"]
        }
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
        "before": ["<leader>", "d"],
        "after": ["d", "d"]
        },
        {
        "before": ["<C-n>"],
        "commands": [":nohl"]
        }
    ],
    "vim.leader": "<space>",
    "vim.handleKeys": {
        "<C-a>": false,
        "<C-f>": false
    },
    "files.insertFinalNewline": true,
        // Controls if quick suggestions should show up while typing
        "editor.quickSuggestions": {
            "other": true,
            "comments": false,
            "strings": false
        },
    // Controls if suggestions should be accepted on 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions. The value 'smart' means only accept a suggestion with Enter when it makes a textual change
    "editor.acceptSuggestionOnEnter": "on",
    // Controls the delay in ms after which quick suggestions will show up.
    "editor.quickSuggestionsDelay": 10,
    // Controls if suggestions should automatically show up when typing trigger characters
    "editor.suggestOnTriggerCharacters": true,
    // Controls if pressing tab inserts the best suggestion and if tab cycles through other suggestions
    "editor.tabCompletion": "on",
    // Controls whether sorting favours words that appear close to the cursor
    "editor.suggest.localityBonus": true,
    // Controls how suggestions are pre-selected when showing the suggest list
    "editor.suggestSelection": "recentlyUsed",
    // Enable word based suggestions
    "editor.wordBasedSuggestions": false,
    // Enable parameter hints
    "editor.parameterHints.enabled": true,
    "files.trimTrailingWhitespace": true,
    // Linters
    "python.linting.flake8CategorySeverity.E": "Warning"
}
